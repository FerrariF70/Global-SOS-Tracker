<!--Alarms Window. When there's a new incident this incident written in this table-->
    <Window x:Class="AppGST.Alarms"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AppGST"
        xmlns:col="clr-namespace:System.Collections;assembly=mscorlib"
        AllowsTransparency="True"
        WindowStyle="None" Background="Transparent" WindowStartupLocation="CenterScreen"
        MouseLeftButtonDown="Window_MouseLeftButtonDown" SizeToContent="WidthAndHeight" BorderThickness="0"
        mc:Ignorable="d"
        Title="Alarms" Height="710" Width="700">

    <Window.DataContext>
        <local:AlarmsViewModel/>
    </Window.DataContext>
        
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="600"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Border Opacity="0.7">
            <Border.Background>
                <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                    <LinearGradientBrush.GradientStops>
                        <GradientStop Offset="0" Color="Black"/>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Border.Background>
        </Border>
        <!--<Border Name="mask" Background="Transparent" CornerRadius="10"/>-->

        <DataGrid x:Name="listAlarms" CanUserAddRows="True" IsReadOnly="True" AutoGenerateColumns="False" Width="Auto" 
                  ItemsSource="{Binding ItemsAlarms, UpdateSourceTrigger=PropertyChanged}" CanUserReorderColumns="False"
                  CanUserResizeColumns="False" CanUserResizeRows="False" GridLinesVisibility="None" HeadersVisibility="Column" Height="600" Grid.Row="0" Margin="0,0,0,5"
                  BorderThickness="0">

            <!--Table and style for this table-->
            <DataGrid.Resources>
                <Style TargetType="{x:Type DataGridRow}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Height" Value="25"/>
                    <Setter Property="Foreground" Value="Snow"/>
                    <Setter Property="FontSize" Value="15"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Snow"/>
                            <Setter Property="Foreground" Value="Black"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="BorderThickness" Value="0,0,1,0"/>
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Snow"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Black"/>
                            <Setter Property="Foreground" Value="Snow"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="BorderBrush" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="{x:Type DataGrid}">
                    <Setter Property="Background" Value="Transparent"/>
                </Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="Foreground" Value="Snow"/>
                    <Setter Property="BorderThickness" Value="0"/>
                </Style>
            </DataGrid.Resources>
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="#FF1F1F21"/>
                    <Setter Property="Height" Value="40"/>
                    <Setter Property="Foreground" Value="Snow"/>
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="Padding" Value="10"/>
                    <Setter Property="BorderThickness" Value="0,1,1,0"/>
                    <Setter Property="BorderBrush" Value="Snow"/>
                </Style>
            </DataGrid.ColumnHeaderStyle>
            
            <!--Tabel-->
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="ID">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding ID, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch" >
                                <TextBlock.Background>
                                    <SolidColorBrush Color="{Binding BackgroundColorRow}"/>
                                </TextBlock.Background>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Name">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch">
                                <TextBlock.Background>
                                    <SolidColorBrush Color="{Binding BackgroundColorRow}"/>
                                </TextBlock.Background>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Last Name">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Path=LastName, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch">
                                <TextBlock.Background>
                                    <SolidColorBrush Color="{Binding BackgroundColorRow}"/>
                                </TextBlock.Background>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Address S.O.S">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding CurrentLocation, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch">
                                <TextBlock.Background>
                                    <SolidColorBrush Color="{Binding BackgroundColorRow}"/>
                                </TextBlock.Background>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Pulse" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Pulse , UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch">
                                <TextBlock.Background>
                                    <SolidColorBrush Color="{Binding BackgroundColorRow}"/>
                                </TextBlock.Background>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Phone GST">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Phone, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch">
                                <TextBlock.Background>
                                    <SolidColorBrush Color="{Binding BackgroundColorRow}"/>
                                </TextBlock.Background>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Emergency Handled by: ">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding EmployeerName,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" HorizontalAlignment="Stretch" Foreground="Snow">
                                <TextBox.Background>
                                    <SolidColorBrush Color="{Binding BackgroundColorRow}"/>
                                </TextBox.Background>
                            </TextBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Status Incident" IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding Status,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" HorizontalAlignment="Stretch" Foreground="Snow">
                                <TextBox.Background>
                                    <SolidColorBrush Color="{Binding BackgroundColorRow}"/>
                                </TextBox.Background>
                            </TextBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="time of incedent " IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding TimeIncedent, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch">
                                <TextBlock.Background>
                                    <SolidColorBrush Color="{Binding BackgroundColorRow}"/>
                                </TextBlock.Background>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <Border Grid.Row="1" Opacity="0.7">
            <Border.Background>
                <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                    <LinearGradientBrush.GradientStops>
                        <GradientStop Offset="0" Color="Black"/>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Border.Background>
        </Border>
        
        <!--Button-->
        <StackPanel Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center">
            <Button Content="Exit" 
                    HorizontalContentAlignment="Center" 
                    VerticalContentAlignment="Center" 
                    Foreground="Snow" FontWeight="Bold" 
                    FontSize="40" 
                    MouseEnter="Exit_Button"
                    MouseLeave="Exit_Button_Leave"
                    Click="Close">
                <Button.Template>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Cursor="Hand" Height="100" Width="100" CornerRadius="50">
                            <Border.Background>
                                <LinearGradientBrush SpreadMethod="Reflect" StartPoint="0,0" EndPoint="0,0.5">
                                    <GradientStop Offset="1" Color="Snow"/>
                                    <GradientStop Offset="0.4" Color="Black"/>
                                    <GradientStop Offset="0.7" Color="Red"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <ContentControl Content="{TemplateBinding Content}" HorizontalContentAlignment="Center"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            FontWeight="{TemplateBinding FontWeight}"
                                            FontSize="{TemplateBinding FontSize}"
                                            Margin="{TemplateBinding Margin}"
                                            Cursor="{TemplateBinding Cursor}"/>
                        </Border>
                    </ControlTemplate>
                </Button.Template>
            </Button>
        </StackPanel>
    </Grid>
</Window>
